diff --git a/Wimso/.gitignore b/Wimso/.gitignore
index 4980d54..0d18739 100644
--- a/Wimso/.gitignore
+++ b/Wimso/.gitignore
@@ -3,5 +3,5 @@ db/*.sqlite3
 log/*.log
 tmp/
 .sass-cache/
-config/environments/development.rb
 
+config/environments/development.rb
diff --git a/Wimso/Gemfile b/Wimso/Gemfile
index e5e5c4c..74a3a69 100644
--- a/Wimso/Gemfile
+++ b/Wimso/Gemfile
@@ -4,7 +4,7 @@ gem 'rails', '3.1.0.rc4'
 
 # Bundle edge Rails instead:
 # gem 'rails',     :git => 'git://github.com/rails/rails.git'
-
+gem 'delayed_job', :git => 'https://github.com/collectiveidea/delayed_job.git', :branch => 'v2.1'
 gem 'sqlite3'
 
 gem 'devise'
diff --git a/Wimso/Gemfile.lock b/Wimso/Gemfile.lock
index 2425216..13d349a 100644
--- a/Wimso/Gemfile.lock
+++ b/Wimso/Gemfile.lock
@@ -1,3 +1,12 @@
+GIT
+  remote: https://github.com/collectiveidea/delayed_job.git
+  revision: 8efc2aa99e8b2e3f8f77ee26cb29ac83088a52a3
+  branch: v2.1
+  specs:
+    delayed_job (2.1.4)
+      activesupport (~> 3.0)
+      daemons
+
 GEM
   remote: http://rubygems.org/
   specs:
@@ -32,13 +41,14 @@ GEM
     activesupport (3.1.0.rc4)
       multi_json (~> 1.0)
     ansi (1.3.0)
-    arel (2.1.3)
+    arel (2.1.4)
     bcrypt-ruby (2.1.4)
     builder (3.0.0)
     coffee-script (2.2.0)
       coffee-script-source
       execjs
     coffee-script-source (1.1.1)
+    daemons (1.1.4)
     devise (1.4.2)
       bcrypt-ruby (~> 2.1.2)
       orm_adapter (~> 0.0.3)
@@ -58,8 +68,8 @@ GEM
     mime-types (1.16)
     multi_json (1.0.3)
     orm_adapter (0.0.5)
-    polyglot (0.3.1)
-    rack (1.3.1)
+    polyglot (0.3.2)
+    rack (1.3.2)
     rack-cache (1.0.2)
       rack (>= 0.4)
     rack-mount (0.8.1)
@@ -85,20 +95,21 @@ GEM
       thor (~> 0.14.6)
     rake (0.9.2)
     rdoc (3.8)
-    sass (3.1.4)
-    sass-rails (3.1.0.rc.4)
+    sass (3.1.5)
+    sass-rails (3.1.0.rc.5)
       actionpack (~> 3.1.0.rc1)
       railties (~> 3.1.0.rc1)
       sass (>= 3.1.4)
       sprockets (>= 2.0.0.beta.9)
-    sprockets (2.0.0.beta.10)
-      hike (~> 1.0)
+    sprockets (2.0.0.beta.12)
+      hike (~> 1.2)
       rack (~> 1.0)
       tilt (~> 1.1, != 1.3.0)
-    sqlite3 (1.3.3)
+    sqlite3 (1.3.4)
     thor (0.14.6)
     tilt (1.3.2)
-    treetop (1.4.9)
+    treetop (1.4.10)
+      polyglot
       polyglot (>= 0.3.1)
     turn (0.8.2)
       ansi (>= 1.2.2)
@@ -106,7 +117,7 @@ GEM
     uglifier (1.0.0)
       execjs (>= 0.3.0)
       multi_json (>= 1.0.2)
-    warden (1.0.4)
+    warden (1.0.5)
       rack (>= 1.0)
 
 PLATFORMS
@@ -114,6 +125,7 @@ PLATFORMS
 
 DEPENDENCIES
   coffee-script
+  delayed_job!
   devise
   jquery-rails
   rails (= 3.1.0.rc4)
diff --git a/Wimso/app/controllers/user_controller.rb b/Wimso/app/controllers/user_controller.rb
index 7b39afd..e60b7e4 100644
--- a/Wimso/app/controllers/user_controller.rb
+++ b/Wimso/app/controllers/user_controller.rb
@@ -52,6 +52,11 @@ class UserController < ApplicationController
 		ur = UserRun.find params[:urun_id]
 		ur.interval= params[:interval].to_i
 		ur.save
+		UserMailer.delay(:run_at => 5.seconds.from_now).welcome(ur)
+							#UserMailer.delay(:run_at => 5.seconds.from_now).
+			#welcome(User.find(User.first.id))
+					
+					
 		redirect_to :back
 	end
 
diff --git a/Wimso/app/mailers/user_mailer.rb b/Wimso/app/mailers/user_mailer.rb
new file mode 100644
index 0000000..d5713f7
--- /dev/null
+++ b/Wimso/app/mailers/user_mailer.rb
@@ -0,0 +1,33 @@
+class UserMailer < ActionMailer::Base
+  
+  #config.action_mailer.delivery_method = :smtp 						
+								
+
+  
+  def welcome(ur)
+	  begin
+		@user = User.find(25)
+		@userrun= ur
+		Run.find(@userrun.run_id)
+		
+		if(ur.is_nil? || @user.is_nil? )
+			mail(:to => "garbagegarbage@web.de",
+			:from => "carsten.schipmann@mni.thm.de",
+			:subject => "kaputt-test")	
+		else
+			#TODO last modified
+			mail(:to => @user.email,
+				:from => "carsten.schipmann@mni.thm.de",
+				:subject => "Wimso, Dein SerienUpdate")
+			#UserMailer.delay(:run_at => 5.seconds.from_now).welcome(ur)
+		end
+	rescue		
+		mail(:to => "garbagegarbage@web.de",
+				:from => "carsten.schipmann@mni.thm.de",
+				:subject => "kaputt")
+	 end
+  end
+  
+  
+  
+end
diff --git a/Wimso/app/views/user_mailer/welcome.html.erb b/Wimso/app/views/user_mailer/welcome.html.erb
new file mode 100644
index 0000000..c167c1a
--- /dev/null
+++ b/Wimso/app/views/user_mailer/welcome.html.erb
@@ -0,0 +1,13 @@
+<% begin %>
+	<% if( !( @user.is_nil? || @userrun.is_nil?)) %>
+		Hallo <%= @user.name  %>
+		<p>soeben ist eine neue Folge von 
+		<%= Run.find(@userrun.run_id).name %> erschienen !</p>
+	<% end %>
+<% rescue %>
+	 INTERNAL DATABASE FAILURE, PLEASE REPORT TO TERMINATOR!
+
+	<p>Wenn du diese Nachricht nicht mehr bekommen moechtest, geh auf URL und aendere die Einstellungen deiner Serien! </p>
+	<p>Viel Spass</p>
+
+<% end %>
\ No newline at end of file
diff --git a/Wimso/config/environments/development.rb b/Wimso/config/environments/development.rb
index 9ef358e..26f197b 100644
--- a/Wimso/config/environments/development.rb
+++ b/Wimso/config/environments/development.rb
@@ -24,4 +24,9 @@ Wimso::Application.configure do
 
   # Do not compress assets
   config.assets.compress = false
+  
+    	  config.action_mailer.raise_delivery_errors = true
+	  config.action_mailer.delivery_method = :smtp 
+	  config.action_mailer.smtp_settings = { 
+  
 end
diff --git a/Wimso/db/migrate/20110727134629_create_delayed_jobs.rb b/Wimso/db/migrate/20110727134629_create_delayed_jobs.rb
new file mode 100644
index 0000000..ac579df
--- /dev/null
+++ b/Wimso/db/migrate/20110727134629_create_delayed_jobs.rb
@@ -0,0 +1,21 @@
+class CreateDelayedJobs < ActiveRecord::Migration
+  def self.up
+    create_table :delayed_jobs, :force => true do |table|
+      table.integer  :priority, :default => 0      # Allows some jobs to jump to the front of the queue
+      table.integer  :attempts, :default => 0      # Provides for retries, but still fail eventually.
+      table.text     :handler                      # YAML-encoded string of the object that will do work
+      table.text     :last_error                   # reason for last failure (See Note below)
+      table.datetime :run_at                       # When to run. Could be Time.zone.now for immediately, or sometime in the future.
+      table.datetime :locked_at                    # Set when a client is working on this object
+      table.datetime :failed_at                    # Set when all retries have failed (actually, by default, the record is deleted instead)
+      table.string   :locked_by                    # Who is working on this object (if locked)
+      table.timestamps
+    end
+	
+    add_index :delayed_jobs, [:priority, :run_at], :name => 'delayed_jobs_priority'
+  end
+  
+  def self.down
+    drop_table :delayed_jobs  
+  end
+end
\ No newline at end of file
diff --git a/Wimso/db/schema.rb b/Wimso/db/schema.rb
index 45d6e44..797331b 100644
--- a/Wimso/db/schema.rb
+++ b/Wimso/db/schema.rb
@@ -10,7 +10,7 @@
 #
 # It's strongly recommended to check this file into your version control system.
 
-ActiveRecord::Schema.define(:version => 20110722134214) do
+ActiveRecord::Schema.define(:version => 20110727134629) do
 
   create_table "comments", :force => true do |t|
     t.text     "content"
@@ -23,6 +23,21 @@ ActiveRecord::Schema.define(:version => 20110722134214) do
   add_index "comments", ["run_id"], :name => "index_comments_on_run_id"
   add_index "comments", ["user_id"], :name => "index_comments_on_user_id"
 
+  create_table "delayed_jobs", :force => true do |t|
+    t.integer  "priority",   :default => 0
+    t.integer  "attempts",   :default => 0
+    t.text     "handler"
+    t.text     "last_error"
+    t.datetime "run_at"
+    t.datetime "locked_at"
+    t.datetime "failed_at"
+    t.string   "locked_by"
+    t.datetime "created_at"
+    t.datetime "updated_at"
+  end
+
+  add_index "delayed_jobs", ["priority", "run_at"], :name => "delayed_jobs_priority"
+
   create_table "episodes", :force => true do |t|
     t.integer  "nr"
     t.date     "datum"
diff --git a/Wimso/db/seeds.rb b/Wimso/db/seeds.rb
index 121b2a5..f892e7b 100644
--- a/Wimso/db/seeds.rb
+++ b/Wimso/db/seeds.rb
@@ -6,7 +6,7 @@
 #   cities = City.create([{ name: 'Chicago' }, { name: 'Copenhagen' }])
 #   Mayor.create(name: 'Emanuel', city: cities.first)
 
-u1=User.create :name => "eins", :email => "admin@bar.gov", :password => "123456", :password_confirmation => "123456", :privacy_flag => false
+u1=User.create :name => "eins", :email => "garbagegarbage@web.de", :password => "123456", :password_confirmation => "123456", :privacy_flag => false
 u2=User.create :name => "zwei", :email => "foo2@bar.gov", :password => "123456", :password_confirmation => "123456", :privacy_flag => false
 u3=User.create :name => "drei", :email => "foo3@bar.gov", :password => "123456", :password_confirmation => "123456", :privacy_flag => false
 u4=User.create :name => "Okarin", :email => "jens.mehler@mni.th-mittelessen.de", :password => "gelbanane", :password_confirmation => "gelbanane"
@@ -18,9 +18,11 @@ u1.is_admin=true
 u4.is_admin=true
 u4.privacy_flag=false
 u1.privacy_flag=true
-u4.save 
+
 u1.save
 u2.save
+u4.save 
+
 
 s1 = Run.create :name => "Breaking Bad", :anz_staf => 5, :anz_eps => 64, :rating => 0, :anz_rating => 0, :global => true
 e1 = Episode.create :title => "Pilot", :nr => 1
diff --git a/Wimso/lib/my_job.rb b/Wimso/lib/my_job.rb
new file mode 100644
index 0000000..7457173
--- /dev/null
+++ b/Wimso/lib/my_job.rb
@@ -0,0 +1,45 @@
+module MyJob#http://railscasts.com/episodes/171-delayed-job
+	
+class MailorJob < Struct.new(:ur_id,:id)		
+		
+		def perform
+			u= User.first
+			u.name= "Horst"
+			u.save
+			puts ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>enqueue"
+			UserMailer.welcome(User.find(User.first.id)).deliver
+		end
+		  def enqueue(job)
+			  puts ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>enqueue"
+		#    record_stat 'mailor_job/enqueue'
+		  end
+
+
+		  def before(job)
+			  puts ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>before"
+		#    record_stat 'mailor_job/start'
+		  end
+
+		  def after(job)
+			  puts ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>after"
+		#    record_stat 'mailor_job/after'
+		  end
+
+		  def success(job)
+			  puts ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>success"
+		#    record_stat 'mailor_job/success'
+		  end
+
+		  def error(job, exception)
+			puts  ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>error"  
+		    #notify_hoptoad(exception)
+		  end
+
+		  def failure
+			    puts ">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>fail"
+		    #page_sysadmin_in_the_middle_of_the_night
+		  end
+	end
+	
+	
+end
\ No newline at end of file
diff --git a/Wimso/script/delayed_job b/Wimso/script/delayed_job
new file mode 100755
index 0000000..edf1959
--- /dev/null
+++ b/Wimso/script/delayed_job
@@ -0,0 +1,5 @@
+#!/usr/bin/env ruby
+
+require File.expand_path(File.join(File.dirname(__FILE__), '..', 'config', 'environment'))
+require 'delayed/command'
+Delayed::Command.new(ARGV).daemonize
